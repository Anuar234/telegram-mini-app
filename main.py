from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from fastapi.responses import HTMLResponse
from pydantic import BaseModel
from typing import List, Optional
from fastapi.staticfiles import StaticFiles
import uvicorn
import os
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import asyncio
from fastapi.responses import JSONResponse
from telegram.ext import Application, CommandHandler, ContextTypes


BOT_TOKEN = os.getenv("BOT_TOKEN") # –î–æ–±–∞–≤—å BOT_TOKEN –≤ Railway secrets

application = Application.builder().token(BOT_TOKEN).build()

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç üëã! –Ø —Ç–≤–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π –±–æ—Ç üèãÔ∏è")

application.add_handler(CommandHandler("start", start))

app = FastAPI(
    title="–¢—Ä–µ–Ω–∞–∂–µ—Ä Mini App API",
    description="API –¥–ª—è Telegram Mini App —Ç—Ä–µ–Ω–∞–∂–µ—Ä–∞",
    version="1.0.0"
)

# CORS middleware –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

app.mount("/static", StaticFiles(directory="static"), name="static")

# –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö
class Video(BaseModel):
    id: int
    title: str
    description: str
    youtube_url: str
    duration: str
    level: str  # –Ω–∞—á–∏–Ω–∞—é—â–∏–π, —Å—Ä–µ–¥–Ω–∏–π, –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π

class ConsultationRequest(BaseModel):
    name: str
    question: str
    contact: Optional[str] = None

# –í—Ä–µ–º–µ–Ω–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –Ω–∞—Å—Ç–æ—è—â—É—é –ë–î)
VIDEOS_DB = [
    {
        "id": 1,
        "title": "–í–≤–µ–¥–µ–Ω–∏–µ –≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
        "description": "–ë–∞–∑–æ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–Ω–∞–∂–µ—Ä–∞",
        "youtube_url": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
        "duration": "10:30",
        "level": "–Ω–∞—á–∏–Ω–∞—é—â–∏–π"
    },
    {
        "id": 2,
        "title": "–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è",
        "description": "–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è",
        "youtube_url": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
        "duration": "15:45",
        "level": "–Ω–∞—á–∏–Ω–∞—é—â–∏–π"
    },
    {
        "id": 3,
        "title": "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏",
        "description": "–°–ª–æ–∂–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
        "youtube_url": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
        "duration": "20:15",
        "level": "–ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π"
    }
]

PRODUCT_INFO = {
    "name": "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–∞–∂–µ—Ä",
    "description": "–ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–∞–∂–µ—Ä –¥–ª—è –¥–æ–º–∞—à–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
    "features": [
        "–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –¥–∏–∑–∞–π–Ω",
        "–†–µ–≥—É–ª–∏—Ä—É–µ–º–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞",
        "–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤—Å–µ—Ö —É—Ä–æ–≤–Ω–µ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏",
        "–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"
    ],
    "specifications": {
        "weight": "15 –∫–≥",
        "dimensions": "120x60x40 —Å–º",
        "max_load": "150 –∫–≥"
    }
}

# API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
@app.get("/health")
async def health():
    return JSONResponse(content={"status": "ok"})

@app.get("/")
async def root():
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º HTML —Å —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–º
    return HTMLResponse(content="""
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>–¢—Ä–µ–Ω–∞–∂–µ—Ä App</title>
        <script>
            window.location.href = '/app';
        </script>
    </head>
    <body>
        <div style="text-align: center; padding: 50px; font-family: Arial, sans-serif;">
            <h2>üèãÔ∏è –¢—Ä–µ–Ω–∞–∂–µ—Ä Mini App</h2>
            <p>–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...</p>
            <p><a href="/app">–ï—Å–ª–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–∞–∂–º–∏—Ç–µ —Å—é–¥–∞</a></p>
        </div>
    </body>
    </html>
    """)

@app.get("/api/product-info")
async def get_product_info():
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ"""
    return PRODUCT_INFO

@app.get("/api/videos", response_model=List[Video])
async def get_videos():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–∏–¥–µ–æ"""
    return VIDEOS_DB

@app.get("/api/videos/{video_id}", response_model=Video)
async def get_video(video_id: int):
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –≤–∏–¥–µ–æ –ø–æ ID"""
    video = next((v for v in VIDEOS_DB if v["id"] == video_id), None)
    if not video:
        raise HTTPException(status_code=404, detail="–í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    return video

@app.get("/api/videos/level/{level}")
async def get_videos_by_level(level: str):
    """–ü–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ –ø–æ —É—Ä–æ–≤–Ω—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏"""
    filtered_videos = [v for v in VIDEOS_DB if v["level"] == level]
    return filtered_videos

@app.post("/api/consultation")
async def send_consultation_request(request: ConsultationRequest):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"""
    # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
    print(f"–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –æ—Ç {request.name}: {request.question}")
    return {"message": "–ó–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω", "status": "success"}

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ —É–±–∏—Ä–∞–µ–º - –Ω–µ –Ω—É–∂–Ω–æ –¥–ª—è –¥–µ–ø–ª–æ—è
# app.mount("/static", StaticFiles(directory="static"), name="static")

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–±—É–¥–µ—Ç –æ—Ç–¥–∞–≤–∞—Ç—å Vue.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)
@app.get("/app")
async def get_app():
    return HTMLResponse(content="""
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>–¢—Ä–µ–Ω–∞–∂–µ—Ä App</title>
        <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
        <script src="https://telegram.org/js/telegram-web-app.js"></script>
        <style>
            body { 
                margin: 0; 
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                background: var(--tg-theme-bg-color, #ffffff);
                color: var(--tg-theme-text-color, #000000);
            }
            .container { 
                max-width: 100%; 
                padding: 20px;
            }
            .menu-item {
                display: block;
                padding: 15px;
                margin: 10px 0;
                background: var(--tg-theme-button-color, #007AFF);
                color: var(--tg-theme-button-text-color, #ffffff);
                text-decoration: none;
                border-radius: 8px;
                text-align: center;
                font-weight: 500;
            }
            .menu-item:hover {
                opacity: 0.8;
            }
            .video-item {
                border: 1px solid #e0e0e0;
                border-radius: 8px;
                padding: 15px;
                margin: 10px 0;
                background: var(--tg-theme-secondary-bg-color, #f8f8f8);
            }
            .back-btn {
                background: var(--tg-theme-secondary-bg-color, #f0f0f0);
                color: var(--tg-theme-text-color, #000000);
                margin-bottom: 20px;
            }
            .form-group {
                margin: 15px 0;
            }
            .form-group label {
                display: block;
                margin-bottom: 5px;
                font-weight: 500;
            }
            .form-group input, .form-group textarea {
                width: 100%;
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 5px;
                box-sizing: border-box;
            }
            .submit-btn {
                background: var(--tg-theme-button-color, #007AFF);
                color: var(--tg-theme-button-text-color, #ffffff);
                border: none;
                padding: 12px 20px;
                border-radius: 5px;
                cursor: pointer;
                width: 100%;
            }
        </style>
    </head>
    <body>
        <div id="app"></div>
        <script>
            const API_BASE = window.location.origin + '/api';
            
            const { createApp } = Vue;
            
            createApp({
                data() {
                    return {
                        currentView: 'menu',
                        productInfo: {},
                        videos: [],
                        consultationForm: {
                            name: '',
                            question: '',
                            contact: ''
                        }
                    }
                },
                async mounted() {
                    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
                    if (window.Telegram && window.Telegram.WebApp) {
                        window.Telegram.WebApp.ready();
                        window.Telegram.WebApp.expand();
                    }
                    
                    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
                    await this.loadProductInfo();
                    await this.loadVideos();
                },
                methods: {
                    async loadProductInfo() {
                        try {
                            const response = await fetch(`${API_BASE}/product-info`);
                            this.productInfo = await response.json();
                        } catch (error) {
                            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–¥—É–∫—Ç–µ:', error);
                        }
                    },
                    async loadVideos() {
                        try {
                            const response = await fetch(`${API_BASE}/videos`);
                            this.videos = await response.json();
                        } catch (error) {
                            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ:', error);
                        }
                    },
                    async submitConsultation() {
                        try {
                            const response = await fetch(`${API_BASE}/consultation`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(this.consultationForm)
                            });
                            
                            if (response.ok) {
                                alert('–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
                                this.consultationForm = { name: '', question: '', contact: '' };
                                this.currentView = 'menu';
                            }
                        } catch (error) {
                            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞:', error);
                            alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
                        }
                    },
                    openYoutube(url) {
                        if (window.Telegram && window.Telegram.WebApp) {
                            window.Telegram.WebApp.openLink(url);
                        } else {
                            window.open(url, '_blank');
                        }
                    }
                },
                template: `
                    <div class="container">
                        <!-- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é -->
                        <div v-if="currentView === 'menu'">
                            <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h2>
                            <p>–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:</p>
                            
                            <a href="#" class="menu-item" @click="currentView = 'product'">
                                üìã –û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç–æ–≤–∞—Ä–æ–º
                            </a>
                            
                            <a href="#" class="menu-item" @click="currentView = 'training'">
                                üé• –¢—Ä–µ–Ω–∏–Ω–≥ –ø—Ä–æ–≥—Ä–∞–º–º–∞
                            </a>
                            
                            <a href="#" class="menu-item" @click="currentView = 'consultation'">
                                üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—É
                            </a>
                        </div>
                        
                        <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ -->
                        <div v-if="currentView === 'product'">
                            <a href="#" class="menu-item back-btn" @click="currentView = 'menu'">
                                ‚Üê –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
                            </a>
                            
                            <h2>{{ productInfo.name }}</h2>
                            <p>{{ productInfo.description }}</p>
                            
                            <h3>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</h3>
                            <ul>
                                <li v-for="feature in productInfo.features" :key="feature">
                                    {{ feature }}
                                </li>
                            </ul>
                            
                            <h3>–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:</h3>
                            <p><strong>–í–µ—Å:</strong> {{ productInfo.specifications?.weight }}</p>
                            <p><strong>–†–∞–∑–º–µ—Ä—ã:</strong> {{ productInfo.specifications?.dimensions }}</p>
                            <p><strong>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞:</strong> {{ productInfo.specifications?.max_load }}</p>
                        </div>
                        
                        <!-- –¢—Ä–µ–Ω–∏–Ω–≥ –ø—Ä–æ–≥—Ä–∞–º–º–∞ -->
<div v-if="currentView === 'training'">
    <a href="#" class="menu-item back-btn" @click="currentView = 'menu'">
        ‚Üê –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
    </a>
    
    <h2>–¢—Ä–µ–Ω–∏–Ω–≥ –ø—Ä–æ–≥—Ä–∞–º–º–∞</h2>
    <p>–í–∏–¥–µ–æ-—É—Ä–æ–∫–∏ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–Ω–∞–∂–µ—Ä–∞:</p>
    
        <!-- Image above videos -->
            <img 
                src="/static/photo-training_equipment.jpg" 
                    alt="–¢—Ä–µ–Ω–∞–∂–µ—Ä" 
                        style="width:100%; max-width:600px; border-radius:8px; margin:15px 0;">
                    <div v-for="video in videos" :key="video.id" class="video-item">
                        <h3>{{ video.title }}</h3>
                        <p>{{ video.description }}</p>
                        <p><strong>–£—Ä–æ–≤–µ–Ω—å:</strong> {{ video.level }}</p>
                        <p><strong>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</strong> {{ video.duration }}</p>
                                <button class="submit-btn" @click="openYoutube(video.youtube_url)">
                                    ‚ñ∂Ô∏è –°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ
                                </button>
                            </div>
                        </div>

                        
                        <!-- –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è -->
                        <div v-if="currentView === 'consultation'">
                            <a href="#" class="menu-item back-btn" @click="currentView = 'menu'">
                                ‚Üê –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
                            </a>
                            
                            <h2>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</h2>
                            <p>–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –Ω–∞—à–µ–º—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É:</p>
                            
                            <div class="form-group">
                                <label>–í–∞—à–µ –∏–º—è:</label>
                                <input type="text" v-model="consultationForm.name" placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è">
                            </div>
                            
                            <div class="form-group">
                                <label>–í–∞—à –≤–æ–ø—Ä–æ—Å:</label>
                                <textarea v-model="consultationForm.question" placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å" rows="4"></textarea>
                            </div>
                            
                            <div class="form-group">
                                <label>–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏ (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):</label>
                                <input type="text" v-model="consultationForm.contact" placeholder="–¢–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ email">
                            </div>
                            
                            <button class="submit-btn" @click="submitConsultation" :disabled="!consultationForm.name || !consultationForm.question">
                                –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å
                            </button>
                        </div>
                    </div>
                `
            }).mount('#app');
        </script>
    </body>
    </html>
    """)

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 8000))
    application.run_polling()
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...")
    print(f"üì± Mini App: http://localhost:{port}/app")
    print(f"üìã API docs: http://localhost:{port}/docs")
    print("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    uvicorn.run("main:app", host="0.0.0.0", port=port, reload=False)